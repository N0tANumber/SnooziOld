/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-06-09 16:41:44 UTC)
 * on 2014-06-29 at 14:50:30 UTC 
 * Modify at your own risk.
 */

package com.snoozi.videoendpoint;

/**
 * Service definition for Videoendpoint (v2).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link VideoendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Videoendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.16.0-rc of the videoendpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://2-dot-evident-quasar-565.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "videoendpoint/v2/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Videoendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Videoendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getVideo".
   *
   * This request holds the parameters needed by the the videoendpoint server.  After setting any
   * optional parameters, call the {@link GetVideo#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetVideo getVideo(java.lang.Long id) throws java.io.IOException {
    GetVideo result = new GetVideo(id);
    initialize(result);
    return result;
  }

  public class GetVideo extends VideoendpointRequest<com.snoozi.videoendpoint.model.Video> {

    private static final String REST_PATH = "video/{id}";

    /**
     * Create a request for the method "getVideo".
     *
     * This request holds the parameters needed by the the videoendpoint server.  After setting any
     * optional parameters, call the {@link GetVideo#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetVideo#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetVideo(java.lang.Long id) {
      super(Videoendpoint.this, "GET", REST_PATH, null, com.snoozi.videoendpoint.model.Video.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetVideo setAlt(java.lang.String alt) {
      return (GetVideo) super.setAlt(alt);
    }

    @Override
    public GetVideo setFields(java.lang.String fields) {
      return (GetVideo) super.setFields(fields);
    }

    @Override
    public GetVideo setKey(java.lang.String key) {
      return (GetVideo) super.setKey(key);
    }

    @Override
    public GetVideo setOauthToken(java.lang.String oauthToken) {
      return (GetVideo) super.setOauthToken(oauthToken);
    }

    @Override
    public GetVideo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetVideo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetVideo setQuotaUser(java.lang.String quotaUser) {
      return (GetVideo) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetVideo setUserIp(java.lang.String userIp) {
      return (GetVideo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetVideo setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetVideo set(String parameterName, Object value) {
      return (GetVideo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getVideosFromUser".
   *
   * This request holds the parameters needed by the the videoendpoint server.  After setting any
   * optional parameters, call the {@link GetVideosFromUser#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetVideosFromUser getVideosFromUser() throws java.io.IOException {
    GetVideosFromUser result = new GetVideosFromUser();
    initialize(result);
    return result;
  }

  public class GetVideosFromUser extends VideoendpointRequest<com.snoozi.videoendpoint.model.CollectionResponseVideo> {

    private static final String REST_PATH = "getVideosFromUser";

    /**
     * Create a request for the method "getVideosFromUser".
     *
     * This request holds the parameters needed by the the videoendpoint server.  After setting any
     * optional parameters, call the {@link GetVideosFromUser#execute()} method to invoke the remote
     * operation. <p> {@link GetVideosFromUser#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetVideosFromUser() {
      super(Videoendpoint.this, "GET", REST_PATH, null, com.snoozi.videoendpoint.model.CollectionResponseVideo.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetVideosFromUser setAlt(java.lang.String alt) {
      return (GetVideosFromUser) super.setAlt(alt);
    }

    @Override
    public GetVideosFromUser setFields(java.lang.String fields) {
      return (GetVideosFromUser) super.setFields(fields);
    }

    @Override
    public GetVideosFromUser setKey(java.lang.String key) {
      return (GetVideosFromUser) super.setKey(key);
    }

    @Override
    public GetVideosFromUser setOauthToken(java.lang.String oauthToken) {
      return (GetVideosFromUser) super.setOauthToken(oauthToken);
    }

    @Override
    public GetVideosFromUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetVideosFromUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetVideosFromUser setQuotaUser(java.lang.String quotaUser) {
      return (GetVideosFromUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetVideosFromUser setUserIp(java.lang.String userIp) {
      return (GetVideosFromUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public GetVideosFromUser setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public GetVideosFromUser setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long userid;

    /**

     */
    public java.lang.Long getUserid() {
      return userid;
    }

    public GetVideosFromUser setUserid(java.lang.Long userid) {
      this.userid = userid;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String status;

    /**

     */
    public java.lang.String getStatus() {
      return status;
    }

    public GetVideosFromUser setStatus(java.lang.String status) {
      this.status = status;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long fromstamp;

    /**

     */
    public java.lang.Long getFromstamp() {
      return fromstamp;
    }

    public GetVideosFromUser setFromstamp(java.lang.Long fromstamp) {
      this.fromstamp = fromstamp;
      return this;
    }

    @Override
    public GetVideosFromUser set(String parameterName, Object value) {
      return (GetVideosFromUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertVideo".
   *
   * This request holds the parameters needed by the the videoendpoint server.  After setting any
   * optional parameters, call the {@link InsertVideo#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.snoozi.videoendpoint.model.Video}
   * @return the request
   */
  public InsertVideo insertVideo(com.snoozi.videoendpoint.model.Video content) throws java.io.IOException {
    InsertVideo result = new InsertVideo(content);
    initialize(result);
    return result;
  }

  public class InsertVideo extends VideoendpointRequest<com.snoozi.videoendpoint.model.Video> {

    private static final String REST_PATH = "video";

    /**
     * Create a request for the method "insertVideo".
     *
     * This request holds the parameters needed by the the videoendpoint server.  After setting any
     * optional parameters, call the {@link InsertVideo#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertVideo#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.snoozi.videoendpoint.model.Video}
     * @since 1.13
     */
    protected InsertVideo(com.snoozi.videoendpoint.model.Video content) {
      super(Videoendpoint.this, "POST", REST_PATH, content, com.snoozi.videoendpoint.model.Video.class);
    }

    @Override
    public InsertVideo setAlt(java.lang.String alt) {
      return (InsertVideo) super.setAlt(alt);
    }

    @Override
    public InsertVideo setFields(java.lang.String fields) {
      return (InsertVideo) super.setFields(fields);
    }

    @Override
    public InsertVideo setKey(java.lang.String key) {
      return (InsertVideo) super.setKey(key);
    }

    @Override
    public InsertVideo setOauthToken(java.lang.String oauthToken) {
      return (InsertVideo) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertVideo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertVideo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertVideo setQuotaUser(java.lang.String quotaUser) {
      return (InsertVideo) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertVideo setUserIp(java.lang.String userIp) {
      return (InsertVideo) super.setUserIp(userIp);
    }

    @Override
    public InsertVideo set(String parameterName, Object value) {
      return (InsertVideo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listRecentVideo".
   *
   * This request holds the parameters needed by the the videoendpoint server.  After setting any
   * optional parameters, call the {@link ListRecentVideo#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListRecentVideo listRecentVideo() throws java.io.IOException {
    ListRecentVideo result = new ListRecentVideo();
    initialize(result);
    return result;
  }

  public class ListRecentVideo extends VideoendpointRequest<com.snoozi.videoendpoint.model.CollectionResponseVideo> {

    private static final String REST_PATH = "listRecentVideo";

    /**
     * Create a request for the method "listRecentVideo".
     *
     * This request holds the parameters needed by the the videoendpoint server.  After setting any
     * optional parameters, call the {@link ListRecentVideo#execute()} method to invoke the remote
     * operation. <p> {@link ListRecentVideo#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected ListRecentVideo() {
      super(Videoendpoint.this, "GET", REST_PATH, null, com.snoozi.videoendpoint.model.CollectionResponseVideo.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListRecentVideo setAlt(java.lang.String alt) {
      return (ListRecentVideo) super.setAlt(alt);
    }

    @Override
    public ListRecentVideo setFields(java.lang.String fields) {
      return (ListRecentVideo) super.setFields(fields);
    }

    @Override
    public ListRecentVideo setKey(java.lang.String key) {
      return (ListRecentVideo) super.setKey(key);
    }

    @Override
    public ListRecentVideo setOauthToken(java.lang.String oauthToken) {
      return (ListRecentVideo) super.setOauthToken(oauthToken);
    }

    @Override
    public ListRecentVideo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListRecentVideo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListRecentVideo setQuotaUser(java.lang.String quotaUser) {
      return (ListRecentVideo) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListRecentVideo setUserIp(java.lang.String userIp) {
      return (ListRecentVideo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListRecentVideo setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String status;

    /**

     */
    public java.lang.String getStatus() {
      return status;
    }

    public ListRecentVideo setStatus(java.lang.String status) {
      this.status = status;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListRecentVideo setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListRecentVideo set(String parameterName, Object value) {
      return (ListRecentVideo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listVideo".
   *
   * This request holds the parameters needed by the the videoendpoint server.  After setting any
   * optional parameters, call the {@link ListVideo#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListVideo listVideo() throws java.io.IOException {
    ListVideo result = new ListVideo();
    initialize(result);
    return result;
  }

  public class ListVideo extends VideoendpointRequest<com.snoozi.videoendpoint.model.CollectionResponseVideo> {

    private static final String REST_PATH = "video";

    /**
     * Create a request for the method "listVideo".
     *
     * This request holds the parameters needed by the the videoendpoint server.  After setting any
     * optional parameters, call the {@link ListVideo#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListVideo#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListVideo() {
      super(Videoendpoint.this, "GET", REST_PATH, null, com.snoozi.videoendpoint.model.CollectionResponseVideo.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListVideo setAlt(java.lang.String alt) {
      return (ListVideo) super.setAlt(alt);
    }

    @Override
    public ListVideo setFields(java.lang.String fields) {
      return (ListVideo) super.setFields(fields);
    }

    @Override
    public ListVideo setKey(java.lang.String key) {
      return (ListVideo) super.setKey(key);
    }

    @Override
    public ListVideo setOauthToken(java.lang.String oauthToken) {
      return (ListVideo) super.setOauthToken(oauthToken);
    }

    @Override
    public ListVideo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListVideo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListVideo setQuotaUser(java.lang.String quotaUser) {
      return (ListVideo) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListVideo setUserIp(java.lang.String userIp) {
      return (ListVideo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListVideo setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListVideo setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListVideo set(String parameterName, Object value) {
      return (ListVideo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "rateVideo".
   *
   * This request holds the parameters needed by the the videoendpoint server.  After setting any
   * optional parameters, call the {@link RateVideo#execute()} method to invoke the remote operation.
   *
   * @param id
   * @param likevalue
   * @param viewcount
   * @return the request
   */
  public RateVideo rateVideo(java.lang.Long id, java.lang.Integer likevalue, java.lang.Integer viewcount) throws java.io.IOException {
    RateVideo result = new RateVideo(id, likevalue, viewcount);
    initialize(result);
    return result;
  }

  public class RateVideo extends VideoendpointRequest<com.snoozi.videoendpoint.model.Video> {

    private static final String REST_PATH = "rateVideo";

    /**
     * Create a request for the method "rateVideo".
     *
     * This request holds the parameters needed by the the videoendpoint server.  After setting any
     * optional parameters, call the {@link RateVideo#execute()} method to invoke the remote
     * operation. <p> {@link
     * RateVideo#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @param likevalue
     * @param viewcount
     * @since 1.13
     */
    protected RateVideo(java.lang.Long id, java.lang.Integer likevalue, java.lang.Integer viewcount) {
      super(Videoendpoint.this, "PUT", REST_PATH, null, com.snoozi.videoendpoint.model.Video.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.likevalue = com.google.api.client.util.Preconditions.checkNotNull(likevalue, "Required parameter likevalue must be specified.");
      this.viewcount = com.google.api.client.util.Preconditions.checkNotNull(viewcount, "Required parameter viewcount must be specified.");
    }

    @Override
    public RateVideo setAlt(java.lang.String alt) {
      return (RateVideo) super.setAlt(alt);
    }

    @Override
    public RateVideo setFields(java.lang.String fields) {
      return (RateVideo) super.setFields(fields);
    }

    @Override
    public RateVideo setKey(java.lang.String key) {
      return (RateVideo) super.setKey(key);
    }

    @Override
    public RateVideo setOauthToken(java.lang.String oauthToken) {
      return (RateVideo) super.setOauthToken(oauthToken);
    }

    @Override
    public RateVideo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RateVideo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RateVideo setQuotaUser(java.lang.String quotaUser) {
      return (RateVideo) super.setQuotaUser(quotaUser);
    }

    @Override
    public RateVideo setUserIp(java.lang.String userIp) {
      return (RateVideo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RateVideo setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer likevalue;

    /**

     */
    public java.lang.Integer getLikevalue() {
      return likevalue;
    }

    public RateVideo setLikevalue(java.lang.Integer likevalue) {
      this.likevalue = likevalue;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer viewcount;

    /**

     */
    public java.lang.Integer getViewcount() {
      return viewcount;
    }

    public RateVideo setViewcount(java.lang.Integer viewcount) {
      this.viewcount = viewcount;
      return this;
    }

    @Override
    public RateVideo set(String parameterName, Object value) {
      return (RateVideo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeVideo".
   *
   * This request holds the parameters needed by the the videoendpoint server.  After setting any
   * optional parameters, call the {@link RemoveVideo#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveVideo removeVideo(java.lang.Long id) throws java.io.IOException {
    RemoveVideo result = new RemoveVideo(id);
    initialize(result);
    return result;
  }

  public class RemoveVideo extends VideoendpointRequest<Void> {

    private static final String REST_PATH = "video/{id}";

    /**
     * Create a request for the method "removeVideo".
     *
     * This request holds the parameters needed by the the videoendpoint server.  After setting any
     * optional parameters, call the {@link RemoveVideo#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveVideo#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveVideo(java.lang.Long id) {
      super(Videoendpoint.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveVideo setAlt(java.lang.String alt) {
      return (RemoveVideo) super.setAlt(alt);
    }

    @Override
    public RemoveVideo setFields(java.lang.String fields) {
      return (RemoveVideo) super.setFields(fields);
    }

    @Override
    public RemoveVideo setKey(java.lang.String key) {
      return (RemoveVideo) super.setKey(key);
    }

    @Override
    public RemoveVideo setOauthToken(java.lang.String oauthToken) {
      return (RemoveVideo) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveVideo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveVideo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveVideo setQuotaUser(java.lang.String quotaUser) {
      return (RemoveVideo) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveVideo setUserIp(java.lang.String userIp) {
      return (RemoveVideo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveVideo setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveVideo set(String parameterName, Object value) {
      return (RemoveVideo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateVideo".
   *
   * This request holds the parameters needed by the the videoendpoint server.  After setting any
   * optional parameters, call the {@link UpdateVideo#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.snoozi.videoendpoint.model.Video}
   * @return the request
   */
  public UpdateVideo updateVideo(com.snoozi.videoendpoint.model.Video content) throws java.io.IOException {
    UpdateVideo result = new UpdateVideo(content);
    initialize(result);
    return result;
  }

  public class UpdateVideo extends VideoendpointRequest<com.snoozi.videoendpoint.model.Video> {

    private static final String REST_PATH = "video";

    /**
     * Create a request for the method "updateVideo".
     *
     * This request holds the parameters needed by the the videoendpoint server.  After setting any
     * optional parameters, call the {@link UpdateVideo#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateVideo#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.snoozi.videoendpoint.model.Video}
     * @since 1.13
     */
    protected UpdateVideo(com.snoozi.videoendpoint.model.Video content) {
      super(Videoendpoint.this, "PUT", REST_PATH, content, com.snoozi.videoendpoint.model.Video.class);
    }

    @Override
    public UpdateVideo setAlt(java.lang.String alt) {
      return (UpdateVideo) super.setAlt(alt);
    }

    @Override
    public UpdateVideo setFields(java.lang.String fields) {
      return (UpdateVideo) super.setFields(fields);
    }

    @Override
    public UpdateVideo setKey(java.lang.String key) {
      return (UpdateVideo) super.setKey(key);
    }

    @Override
    public UpdateVideo setOauthToken(java.lang.String oauthToken) {
      return (UpdateVideo) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateVideo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateVideo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateVideo setQuotaUser(java.lang.String quotaUser) {
      return (UpdateVideo) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateVideo setUserIp(java.lang.String userIp) {
      return (UpdateVideo) super.setUserIp(userIp);
    }

    @Override
    public UpdateVideo set(String parameterName, Object value) {
      return (UpdateVideo) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Videoendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Videoendpoint}. */
    @Override
    public Videoendpoint build() {
      return new Videoendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link VideoendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setVideoendpointRequestInitializer(
        VideoendpointRequestInitializer videoendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(videoendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
