/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-07-09 17:08:39 UTC)
 * on 2014-07-23 at 18:47:56 UTC 
 * Modify at your own risk.
 */

package com.snoozi.uservideoendpoint;

/**
 * Service definition for Uservideoendpoint (v4).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link UservideoendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Uservideoendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the uservideoendpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://4-dot-evident-quasar-565.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "uservideoendpoint/v4/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Uservideoendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Uservideoendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getUserVideo".
   *
   * This request holds the parameters needed by the uservideoendpoint server.  After setting any
   * optional parameters, call the {@link GetUserVideo#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetUserVideo getUserVideo(java.lang.Long id) throws java.io.IOException {
    GetUserVideo result = new GetUserVideo(id);
    initialize(result);
    return result;
  }

  public class GetUserVideo extends UservideoendpointRequest<com.snoozi.uservideoendpoint.model.UserVideo> {

    private static final String REST_PATH = "uservideo/{id}";

    /**
     * Create a request for the method "getUserVideo".
     *
     * This request holds the parameters needed by the the uservideoendpoint server.  After setting
     * any optional parameters, call the {@link GetUserVideo#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetUserVideo#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetUserVideo(java.lang.Long id) {
      super(Uservideoendpoint.this, "GET", REST_PATH, null, com.snoozi.uservideoendpoint.model.UserVideo.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUserVideo setAlt(java.lang.String alt) {
      return (GetUserVideo) super.setAlt(alt);
    }

    @Override
    public GetUserVideo setFields(java.lang.String fields) {
      return (GetUserVideo) super.setFields(fields);
    }

    @Override
    public GetUserVideo setKey(java.lang.String key) {
      return (GetUserVideo) super.setKey(key);
    }

    @Override
    public GetUserVideo setOauthToken(java.lang.String oauthToken) {
      return (GetUserVideo) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUserVideo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUserVideo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUserVideo setQuotaUser(java.lang.String quotaUser) {
      return (GetUserVideo) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUserVideo setUserIp(java.lang.String userIp) {
      return (GetUserVideo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetUserVideo setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetUserVideo set(String parameterName, Object value) {
      return (GetUserVideo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertUserVideo".
   *
   * This request holds the parameters needed by the uservideoendpoint server.  After setting any
   * optional parameters, call the {@link InsertUserVideo#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.snoozi.uservideoendpoint.model.UserVideo}
   * @return the request
   */
  public InsertUserVideo insertUserVideo(com.snoozi.uservideoendpoint.model.UserVideo content) throws java.io.IOException {
    InsertUserVideo result = new InsertUserVideo(content);
    initialize(result);
    return result;
  }

  public class InsertUserVideo extends UservideoendpointRequest<com.snoozi.uservideoendpoint.model.UserVideo> {

    private static final String REST_PATH = "uservideo";

    /**
     * Create a request for the method "insertUserVideo".
     *
     * This request holds the parameters needed by the the uservideoendpoint server.  After setting
     * any optional parameters, call the {@link InsertUserVideo#execute()} method to invoke the remote
     * operation. <p> {@link InsertUserVideo#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.snoozi.uservideoendpoint.model.UserVideo}
     * @since 1.13
     */
    protected InsertUserVideo(com.snoozi.uservideoendpoint.model.UserVideo content) {
      super(Uservideoendpoint.this, "POST", REST_PATH, content, com.snoozi.uservideoendpoint.model.UserVideo.class);
    }

    @Override
    public InsertUserVideo setAlt(java.lang.String alt) {
      return (InsertUserVideo) super.setAlt(alt);
    }

    @Override
    public InsertUserVideo setFields(java.lang.String fields) {
      return (InsertUserVideo) super.setFields(fields);
    }

    @Override
    public InsertUserVideo setKey(java.lang.String key) {
      return (InsertUserVideo) super.setKey(key);
    }

    @Override
    public InsertUserVideo setOauthToken(java.lang.String oauthToken) {
      return (InsertUserVideo) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertUserVideo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertUserVideo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertUserVideo setQuotaUser(java.lang.String quotaUser) {
      return (InsertUserVideo) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertUserVideo setUserIp(java.lang.String userIp) {
      return (InsertUserVideo) super.setUserIp(userIp);
    }

    @Override
    public InsertUserVideo set(String parameterName, Object value) {
      return (InsertUserVideo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listUserVideo".
   *
   * This request holds the parameters needed by the uservideoendpoint server.  After setting any
   * optional parameters, call the {@link ListUserVideo#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListUserVideo listUserVideo() throws java.io.IOException {
    ListUserVideo result = new ListUserVideo();
    initialize(result);
    return result;
  }

  public class ListUserVideo extends UservideoendpointRequest<com.snoozi.uservideoendpoint.model.CollectionResponseUserVideo> {

    private static final String REST_PATH = "uservideo";

    /**
     * Create a request for the method "listUserVideo".
     *
     * This request holds the parameters needed by the the uservideoendpoint server.  After setting
     * any optional parameters, call the {@link ListUserVideo#execute()} method to invoke the remote
     * operation. <p> {@link ListUserVideo#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected ListUserVideo() {
      super(Uservideoendpoint.this, "GET", REST_PATH, null, com.snoozi.uservideoendpoint.model.CollectionResponseUserVideo.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListUserVideo setAlt(java.lang.String alt) {
      return (ListUserVideo) super.setAlt(alt);
    }

    @Override
    public ListUserVideo setFields(java.lang.String fields) {
      return (ListUserVideo) super.setFields(fields);
    }

    @Override
    public ListUserVideo setKey(java.lang.String key) {
      return (ListUserVideo) super.setKey(key);
    }

    @Override
    public ListUserVideo setOauthToken(java.lang.String oauthToken) {
      return (ListUserVideo) super.setOauthToken(oauthToken);
    }

    @Override
    public ListUserVideo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListUserVideo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListUserVideo setQuotaUser(java.lang.String quotaUser) {
      return (ListUserVideo) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListUserVideo setUserIp(java.lang.String userIp) {
      return (ListUserVideo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListUserVideo setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListUserVideo setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListUserVideo set(String parameterName, Object value) {
      return (ListUserVideo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeUserVideo".
   *
   * This request holds the parameters needed by the uservideoendpoint server.  After setting any
   * optional parameters, call the {@link RemoveUserVideo#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveUserVideo removeUserVideo(java.lang.Long id) throws java.io.IOException {
    RemoveUserVideo result = new RemoveUserVideo(id);
    initialize(result);
    return result;
  }

  public class RemoveUserVideo extends UservideoendpointRequest<Void> {

    private static final String REST_PATH = "uservideo/{id}";

    /**
     * Create a request for the method "removeUserVideo".
     *
     * This request holds the parameters needed by the the uservideoendpoint server.  After setting
     * any optional parameters, call the {@link RemoveUserVideo#execute()} method to invoke the remote
     * operation. <p> {@link RemoveUserVideo#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveUserVideo(java.lang.Long id) {
      super(Uservideoendpoint.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveUserVideo setAlt(java.lang.String alt) {
      return (RemoveUserVideo) super.setAlt(alt);
    }

    @Override
    public RemoveUserVideo setFields(java.lang.String fields) {
      return (RemoveUserVideo) super.setFields(fields);
    }

    @Override
    public RemoveUserVideo setKey(java.lang.String key) {
      return (RemoveUserVideo) super.setKey(key);
    }

    @Override
    public RemoveUserVideo setOauthToken(java.lang.String oauthToken) {
      return (RemoveUserVideo) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveUserVideo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveUserVideo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveUserVideo setQuotaUser(java.lang.String quotaUser) {
      return (RemoveUserVideo) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveUserVideo setUserIp(java.lang.String userIp) {
      return (RemoveUserVideo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveUserVideo setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveUserVideo set(String parameterName, Object value) {
      return (RemoveUserVideo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateUserVideo".
   *
   * This request holds the parameters needed by the uservideoendpoint server.  After setting any
   * optional parameters, call the {@link UpdateUserVideo#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.snoozi.uservideoendpoint.model.UserVideo}
   * @return the request
   */
  public UpdateUserVideo updateUserVideo(com.snoozi.uservideoendpoint.model.UserVideo content) throws java.io.IOException {
    UpdateUserVideo result = new UpdateUserVideo(content);
    initialize(result);
    return result;
  }

  public class UpdateUserVideo extends UservideoendpointRequest<com.snoozi.uservideoendpoint.model.UserVideo> {

    private static final String REST_PATH = "uservideo";

    /**
     * Create a request for the method "updateUserVideo".
     *
     * This request holds the parameters needed by the the uservideoendpoint server.  After setting
     * any optional parameters, call the {@link UpdateUserVideo#execute()} method to invoke the remote
     * operation. <p> {@link UpdateUserVideo#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.snoozi.uservideoendpoint.model.UserVideo}
     * @since 1.13
     */
    protected UpdateUserVideo(com.snoozi.uservideoendpoint.model.UserVideo content) {
      super(Uservideoendpoint.this, "PUT", REST_PATH, content, com.snoozi.uservideoendpoint.model.UserVideo.class);
    }

    @Override
    public UpdateUserVideo setAlt(java.lang.String alt) {
      return (UpdateUserVideo) super.setAlt(alt);
    }

    @Override
    public UpdateUserVideo setFields(java.lang.String fields) {
      return (UpdateUserVideo) super.setFields(fields);
    }

    @Override
    public UpdateUserVideo setKey(java.lang.String key) {
      return (UpdateUserVideo) super.setKey(key);
    }

    @Override
    public UpdateUserVideo setOauthToken(java.lang.String oauthToken) {
      return (UpdateUserVideo) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateUserVideo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateUserVideo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateUserVideo setQuotaUser(java.lang.String quotaUser) {
      return (UpdateUserVideo) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateUserVideo setUserIp(java.lang.String userIp) {
      return (UpdateUserVideo) super.setUserIp(userIp);
    }

    @Override
    public UpdateUserVideo set(String parameterName, Object value) {
      return (UpdateUserVideo) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Uservideoendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Uservideoendpoint}. */
    @Override
    public Uservideoendpoint build() {
      return new Uservideoendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link UservideoendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setUservideoendpointRequestInitializer(
        UservideoendpointRequestInitializer uservideoendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(uservideoendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
