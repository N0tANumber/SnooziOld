/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-06-30 15:48:57 UTC)
 * on 2014-07-09 at 19:08:17 UTC 
 * Modify at your own risk.
 */

package com.snoozi.alarmendpoint;

/**
 * Service definition for Alarmendpoint (v3).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link AlarmendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Alarmendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the alarmendpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://3-dot-evident-quasar-565.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "alarmendpoint/v3/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Alarmendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Alarmendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getAlarm".
   *
   * This request holds the parameters needed by the alarmendpoint server.  After setting any optional
   * parameters, call the {@link GetAlarm#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetAlarm getAlarm(java.lang.Long id) throws java.io.IOException {
    GetAlarm result = new GetAlarm(id);
    initialize(result);
    return result;
  }

  public class GetAlarm extends AlarmendpointRequest<com.snoozi.alarmendpoint.model.Alarm> {

    private static final String REST_PATH = "alarm/{id}";

    /**
     * Create a request for the method "getAlarm".
     *
     * This request holds the parameters needed by the the alarmendpoint server.  After setting any
     * optional parameters, call the {@link GetAlarm#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetAlarm#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetAlarm(java.lang.Long id) {
      super(Alarmendpoint.this, "GET", REST_PATH, null, com.snoozi.alarmendpoint.model.Alarm.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetAlarm setAlt(java.lang.String alt) {
      return (GetAlarm) super.setAlt(alt);
    }

    @Override
    public GetAlarm setFields(java.lang.String fields) {
      return (GetAlarm) super.setFields(fields);
    }

    @Override
    public GetAlarm setKey(java.lang.String key) {
      return (GetAlarm) super.setKey(key);
    }

    @Override
    public GetAlarm setOauthToken(java.lang.String oauthToken) {
      return (GetAlarm) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAlarm setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAlarm) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAlarm setQuotaUser(java.lang.String quotaUser) {
      return (GetAlarm) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAlarm setUserIp(java.lang.String userIp) {
      return (GetAlarm) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetAlarm setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetAlarm set(String parameterName, Object value) {
      return (GetAlarm) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertAlarm".
   *
   * This request holds the parameters needed by the alarmendpoint server.  After setting any optional
   * parameters, call the {@link InsertAlarm#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.snoozi.alarmendpoint.model.Alarm}
   * @return the request
   */
  public InsertAlarm insertAlarm(com.snoozi.alarmendpoint.model.Alarm content) throws java.io.IOException {
    InsertAlarm result = new InsertAlarm(content);
    initialize(result);
    return result;
  }

  public class InsertAlarm extends AlarmendpointRequest<com.snoozi.alarmendpoint.model.Alarm> {

    private static final String REST_PATH = "alarm";

    /**
     * Create a request for the method "insertAlarm".
     *
     * This request holds the parameters needed by the the alarmendpoint server.  After setting any
     * optional parameters, call the {@link InsertAlarm#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertAlarm#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.snoozi.alarmendpoint.model.Alarm}
     * @since 1.13
     */
    protected InsertAlarm(com.snoozi.alarmendpoint.model.Alarm content) {
      super(Alarmendpoint.this, "POST", REST_PATH, content, com.snoozi.alarmendpoint.model.Alarm.class);
    }

    @Override
    public InsertAlarm setAlt(java.lang.String alt) {
      return (InsertAlarm) super.setAlt(alt);
    }

    @Override
    public InsertAlarm setFields(java.lang.String fields) {
      return (InsertAlarm) super.setFields(fields);
    }

    @Override
    public InsertAlarm setKey(java.lang.String key) {
      return (InsertAlarm) super.setKey(key);
    }

    @Override
    public InsertAlarm setOauthToken(java.lang.String oauthToken) {
      return (InsertAlarm) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertAlarm setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertAlarm) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertAlarm setQuotaUser(java.lang.String quotaUser) {
      return (InsertAlarm) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertAlarm setUserIp(java.lang.String userIp) {
      return (InsertAlarm) super.setUserIp(userIp);
    }

    @Override
    public InsertAlarm set(String parameterName, Object value) {
      return (InsertAlarm) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listAlarm".
   *
   * This request holds the parameters needed by the alarmendpoint server.  After setting any optional
   * parameters, call the {@link ListAlarm#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListAlarm listAlarm() throws java.io.IOException {
    ListAlarm result = new ListAlarm();
    initialize(result);
    return result;
  }

  public class ListAlarm extends AlarmendpointRequest<com.snoozi.alarmendpoint.model.CollectionResponseAlarm> {

    private static final String REST_PATH = "alarm";

    /**
     * Create a request for the method "listAlarm".
     *
     * This request holds the parameters needed by the the alarmendpoint server.  After setting any
     * optional parameters, call the {@link ListAlarm#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListAlarm#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListAlarm() {
      super(Alarmendpoint.this, "GET", REST_PATH, null, com.snoozi.alarmendpoint.model.CollectionResponseAlarm.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListAlarm setAlt(java.lang.String alt) {
      return (ListAlarm) super.setAlt(alt);
    }

    @Override
    public ListAlarm setFields(java.lang.String fields) {
      return (ListAlarm) super.setFields(fields);
    }

    @Override
    public ListAlarm setKey(java.lang.String key) {
      return (ListAlarm) super.setKey(key);
    }

    @Override
    public ListAlarm setOauthToken(java.lang.String oauthToken) {
      return (ListAlarm) super.setOauthToken(oauthToken);
    }

    @Override
    public ListAlarm setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListAlarm) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListAlarm setQuotaUser(java.lang.String quotaUser) {
      return (ListAlarm) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListAlarm setUserIp(java.lang.String userIp) {
      return (ListAlarm) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListAlarm setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListAlarm setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListAlarm set(String parameterName, Object value) {
      return (ListAlarm) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeAlarm".
   *
   * This request holds the parameters needed by the alarmendpoint server.  After setting any optional
   * parameters, call the {@link RemoveAlarm#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveAlarm removeAlarm(java.lang.Long id) throws java.io.IOException {
    RemoveAlarm result = new RemoveAlarm(id);
    initialize(result);
    return result;
  }

  public class RemoveAlarm extends AlarmendpointRequest<Void> {

    private static final String REST_PATH = "alarm/{id}";

    /**
     * Create a request for the method "removeAlarm".
     *
     * This request holds the parameters needed by the the alarmendpoint server.  After setting any
     * optional parameters, call the {@link RemoveAlarm#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveAlarm#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveAlarm(java.lang.Long id) {
      super(Alarmendpoint.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveAlarm setAlt(java.lang.String alt) {
      return (RemoveAlarm) super.setAlt(alt);
    }

    @Override
    public RemoveAlarm setFields(java.lang.String fields) {
      return (RemoveAlarm) super.setFields(fields);
    }

    @Override
    public RemoveAlarm setKey(java.lang.String key) {
      return (RemoveAlarm) super.setKey(key);
    }

    @Override
    public RemoveAlarm setOauthToken(java.lang.String oauthToken) {
      return (RemoveAlarm) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveAlarm setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveAlarm) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveAlarm setQuotaUser(java.lang.String quotaUser) {
      return (RemoveAlarm) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveAlarm setUserIp(java.lang.String userIp) {
      return (RemoveAlarm) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveAlarm setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveAlarm set(String parameterName, Object value) {
      return (RemoveAlarm) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateAlarm".
   *
   * This request holds the parameters needed by the alarmendpoint server.  After setting any optional
   * parameters, call the {@link UpdateAlarm#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.snoozi.alarmendpoint.model.Alarm}
   * @return the request
   */
  public UpdateAlarm updateAlarm(com.snoozi.alarmendpoint.model.Alarm content) throws java.io.IOException {
    UpdateAlarm result = new UpdateAlarm(content);
    initialize(result);
    return result;
  }

  public class UpdateAlarm extends AlarmendpointRequest<com.snoozi.alarmendpoint.model.Alarm> {

    private static final String REST_PATH = "alarm";

    /**
     * Create a request for the method "updateAlarm".
     *
     * This request holds the parameters needed by the the alarmendpoint server.  After setting any
     * optional parameters, call the {@link UpdateAlarm#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateAlarm#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.snoozi.alarmendpoint.model.Alarm}
     * @since 1.13
     */
    protected UpdateAlarm(com.snoozi.alarmendpoint.model.Alarm content) {
      super(Alarmendpoint.this, "PUT", REST_PATH, content, com.snoozi.alarmendpoint.model.Alarm.class);
    }

    @Override
    public UpdateAlarm setAlt(java.lang.String alt) {
      return (UpdateAlarm) super.setAlt(alt);
    }

    @Override
    public UpdateAlarm setFields(java.lang.String fields) {
      return (UpdateAlarm) super.setFields(fields);
    }

    @Override
    public UpdateAlarm setKey(java.lang.String key) {
      return (UpdateAlarm) super.setKey(key);
    }

    @Override
    public UpdateAlarm setOauthToken(java.lang.String oauthToken) {
      return (UpdateAlarm) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateAlarm setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateAlarm) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateAlarm setQuotaUser(java.lang.String quotaUser) {
      return (UpdateAlarm) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateAlarm setUserIp(java.lang.String userIp) {
      return (UpdateAlarm) super.setUserIp(userIp);
    }

    @Override
    public UpdateAlarm set(String parameterName, Object value) {
      return (UpdateAlarm) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Alarmendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Alarmendpoint}. */
    @Override
    public Alarmendpoint build() {
      return new Alarmendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link AlarmendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setAlarmendpointRequestInitializer(
        AlarmendpointRequestInitializer alarmendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(alarmendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
